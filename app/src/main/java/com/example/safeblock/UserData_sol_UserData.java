package com.example.safeblock;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple10;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.1.
 */
@SuppressWarnings("rawtypes")
public class UserData_sol_UserData extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_CREATE_USER_DATA = "create_user_data";

    public static final String FUNC_GET_USER_LIST_LENGTH = "get_user_list_length";

    public static final String FUNC_UPDATE_NEW_USER_EMAIL = "update_new_user_email";

    public static final String FUNC_UPDATE_OLD_USER_EMAIL = "update_old_user_email";

    public static final String FUNC_UPDATE_STATUS_INFECTED = "update_status_infected";

    public static final String FUNC_UPDATE_TRANSACTION_HASH = "update_transaction_hash";

    public static final String FUNC_USERS = "users";

    @Deprecated
    protected UserData_sol_UserData(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected UserData_sol_UserData(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected UserData_sol_UserData(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected UserData_sol_UserData(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> create_user_data(String _name, String _placeVisited, String _timeVisited, String latitude, String longitude) {
        final Function function = new Function(
                FUNC_CREATE_USER_DATA, 
                Arrays.<Type>asList(new Utf8String(_name),
                new Utf8String(_placeVisited),
                new Utf8String(_timeVisited),
                new Utf8String(latitude),
                new Utf8String(longitude)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> get_user_list_length() {
        final Function function = new Function(FUNC_GET_USER_LIST_LENGTH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> update_new_user_email(String _name, String _email) {
        final Function function = new Function(
                FUNC_UPDATE_NEW_USER_EMAIL, 
                Arrays.<Type>asList(new Utf8String(_name),
                new Utf8String(_email)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> update_old_user_email(String _name, String _email, String _newEmail) {
        final Function function = new Function(
                FUNC_UPDATE_OLD_USER_EMAIL, 
                Arrays.<Type>asList(new Utf8String(_name),
                new Utf8String(_email),
                new Utf8String(_newEmail)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> update_status_infected(String _name, String _email) {
        final Function function = new Function(
                FUNC_UPDATE_STATUS_INFECTED, 
                Arrays.<Type>asList(new Utf8String(_name),
                new Utf8String(_email)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> update_transaction_hash(String _name, String _placeVisited, String _timeVisited, String latitude, String longitude, String _transactionHash) {
        final Function function = new Function(
                FUNC_UPDATE_TRANSACTION_HASH, 
                Arrays.<Type>asList(new Utf8String(_name),
                new Utf8String(_placeVisited),
                new Utf8String(_timeVisited),
                new Utf8String(latitude),
                new Utf8String(longitude),
                new Utf8String(_transactionHash)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple10<BigInteger, String, String, String, String, String, String, String, String, Boolean>> users(BigInteger param0) {
        final Function function = new Function(FUNC_USERS, 
                Arrays.<Type>asList(new Uint256(param0)),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple10<BigInteger, String, String, String, String, String, String, String, String, Boolean>>(function,
                new Callable<Tuple10<BigInteger, String, String, String, String, String, String, String, String, Boolean>>() {
                    @Override
                    public Tuple10<BigInteger, String, String, String, String, String, String, String, String, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple10<BigInteger, String, String, String, String, String, String, String, String, Boolean>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (Boolean) results.get(9).getValue());
                    }
                });
    }

    @Deprecated
    public static UserData_sol_UserData load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new UserData_sol_UserData(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static UserData_sol_UserData load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new UserData_sol_UserData(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static UserData_sol_UserData load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new UserData_sol_UserData(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static UserData_sol_UserData load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new UserData_sol_UserData(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<UserData_sol_UserData> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(UserData_sol_UserData.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<UserData_sol_UserData> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(UserData_sol_UserData.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<UserData_sol_UserData> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(UserData_sol_UserData.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<UserData_sol_UserData> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(UserData_sol_UserData.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
